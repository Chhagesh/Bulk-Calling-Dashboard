{"ast":null,"code":"var _jsxFileName = \"/home/chhagesh/Desktop/Bulk-Calling-Dashboard/frontend/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Button, Grid, Typography, Card, CardContent, CircularProgress } from \"@mui/material\";\nimport UploadContacts from \"./UploadContacts\";\nimport axios from \"axios\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nexport default function Dashboard() {\n  const [calls, setCalls] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [failedCalls, setFailedCalls] = useState(0);\n  const [totalCalls, setTotalCalls] = useState(0);\n  const [completedCalls, setCompletedCalls] = useState(0);\n  const [pendingCalls, setPendingCalls] = useState(0);\n  useEffect(() => {\n    const fetchCalls = async () => {\n      try {\n        const res = await axios.get(\"http://127.0.0.1:8000/call_logs\");\n        setCalls(res.data.calls);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchCalls();\n    const interval = setInterval(fetchCalls, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    setTotalCalls(calls.length);\n    setCompletedCalls(calls.filter(call => call.status === \"completed\").length);\n    setPendingCalls(calls.filter(call => call.status === \"pending\").length);\n    setFailedCalls(calls.filter(call => call.status === \"failed\").length);\n  }, [calls]);\n  const handleStartCalls = async () => {\n    try {\n      setLoading(true);\n      const contacts = calls.filter(call => call.status === \"pending\").map(call => ({\n        phone_number: call.phone_number,\n        name: call.name || \"Unknown\"\n      }));\n      await axios.post(\"http://127.0.0.1:8000/start_calls\", {\n        contacts\n      });\n      const updatedCalls = await axios.get(\"http://127.0.0.1:8000/call_logs\");\n      setCalls(updatedCalls.data.calls);\n    } catch (error) {\n      alert(`Error starting calls: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    m: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Bulk Calling Dashboard\"), /*#__PURE__*/React.createElement(UploadContacts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, [{\n    title: \"Total Calls\",\n    value: totalCalls,\n    color: \"#1976D2\"\n  }, {\n    title: \"Pending Calls\",\n    value: pendingCalls,\n    color: \"#FFA000\"\n  }, {\n    title: \"Completed Calls\",\n    value: completedCalls,\n    color: \"#388E3C\"\n  }, {\n    title: \"Failed Calls\",\n    value: failedCalls,\n    color: \"#D32F2F\"\n  }].map((stat, index) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 3,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    sx: {\n      backgroundColor: stat.color,\n      color: \"white\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, stat.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, stat.value)))))), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 32\n      }\n    }) : /*#__PURE__*/React.createElement(PlayArrowIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 65\n      }\n    }),\n    disabled: loading || calls.length === 0,\n    onClick: handleStartCalls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, loading ? \"Initiating Calls...\" : \"Start Bulk Calls\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Grid","Typography","Card","CardContent","CircularProgress","UploadContacts","axios","PlayArrowIcon","Dashboard","calls","setCalls","loading","setLoading","failedCalls","setFailedCalls","totalCalls","setTotalCalls","completedCalls","setCompletedCalls","pendingCalls","setPendingCalls","fetchCalls","res","get","data","error","console","interval","setInterval","clearInterval","length","filter","call","status","handleStartCalls","contacts","map","phone_number","name","post","updatedCalls","alert","message","createElement","m","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","textAlign","gutterBottom","container","spacing","mt","title","value","color","stat","index","item","xs","sm","md","key","sx","backgroundColor","display","justifyContent","startIcon","size","disabled","onClick"],"sources":["/home/chhagesh/Desktop/Bulk-Calling-Dashboard/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Button, Grid, Typography, Card, CardContent, CircularProgress } from \"@mui/material\";\nimport UploadContacts from \"./UploadContacts\";\nimport axios from \"axios\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\n\nexport default function Dashboard() {\n  const [calls, setCalls] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [failedCalls, setFailedCalls] = useState(0);\n  const [totalCalls, setTotalCalls] = useState(0);\n  const [completedCalls, setCompletedCalls] = useState(0);\n  const [pendingCalls, setPendingCalls] = useState(0);\n\n  useEffect(() => {\n    const fetchCalls = async () => {\n      try {\n        const res = await axios.get(\"http://127.0.0.1:8000/call_logs\");\n        setCalls(res.data.calls);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchCalls();\n    const interval = setInterval(fetchCalls, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    setTotalCalls(calls.length);\n    setCompletedCalls(calls.filter(call => call.status === \"completed\").length);\n    setPendingCalls(calls.filter(call => call.status === \"pending\").length);\n    setFailedCalls(calls.filter(call => call.status === \"failed\").length);\n  }, [calls]);\n\n  const handleStartCalls = async () => {\n    try {\n      setLoading(true);\n      const contacts = calls.filter(call => call.status === \"pending\").map(call => ({\n        phone_number: call.phone_number,\n        name: call.name || \"Unknown\",\n      }));\n\n      await axios.post(\"http://127.0.0.1:8000/start_calls\", { contacts });\n\n      const updatedCalls = await axios.get(\"http://127.0.0.1:8000/call_logs\");\n      setCalls(updatedCalls.data.calls);\n    } catch (error) {\n      alert(`Error starting calls: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box m={3}>\n      {/* Header */}\n      <Typography variant=\"h4\" fontWeight=\"bold\" textAlign=\"center\" gutterBottom>\n        Bulk Calling Dashboard\n      </Typography>\n\n      <UploadContacts />\n\n      {/* Stats Section */}\n      <Grid container spacing={3} mt={3}>\n        {[{\n          title: \"Total Calls\", value: totalCalls, color: \"#1976D2\"\n        }, {\n          title: \"Pending Calls\", value: pendingCalls, color: \"#FFA000\"\n        }, {\n          title: \"Completed Calls\", value: completedCalls, color: \"#388E3C\"\n        }, {\n          title: \"Failed Calls\", value: failedCalls, color: \"#D32F2F\"\n        }].map((stat, index) => (\n          <Grid item xs={12} sm={6} md={3} key={index}>\n            <Card sx={{ backgroundColor: stat.color, color: \"white\", textAlign: \"center\" }}>\n              <CardContent>\n                <Typography variant=\"h6\">{stat.title}</Typography>\n                <Typography variant=\"h4\" fontWeight=\"bold\">{stat.value}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Start Calls Button */}\n      <Box display=\"flex\" justifyContent=\"center\" mt={4}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={loading ? <CircularProgress size={24} /> : <PlayArrowIcon />}\n          disabled={loading || calls.length === 0}\n          onClick={handleStartCalls}\n        >\n          {loading ? \"Initiating Calls...\" : \"Start Bulk Calls\"}\n        </Button>\n      </Box>\n\n      {/* Call Logs and Analytics */}\n      <Grid container spacing={3} mt={3}>\n        <Grid item xs={12} md={6}>\n          \n        </Grid>\n        <Grid item xs={12} md={6}>\n         \n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}